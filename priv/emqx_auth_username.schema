%%-*- mode: erlang -*-
%% emqx_auth_username config mapping

{mapping, "auth.user.$id.username", "emqx_auth_username.userlist", [
  {datatype, string}
]}.

{mapping, "auth.user.$id.password", "emqx_auth_username.userlist", [
  {datatype, string}
]}.

{mapping, "auth.user.password_hash", "emqx_auth_username.config", [
  {datatype, string}
]}.

{translation, "emqx_auth_username.userlist", fun(Conf) ->
  Userlist = cuttlefish_variable:filter_by_prefix("auth.user", Conf),
  lists:foldl(
    fun({["auth", "user", Id, "username"], Username}, AccIn) ->
        [{Username, cuttlefish:conf_get("auth.user." ++ Id ++ ".password", Conf)} | AccIn];
       (_, AccIn) ->
        AccIn
  	end, [], Userlist)
end}.

{translation, "emqx_auth_username.config", fun(Conf) ->
  PasswordHash = cuttlefish:conf_get("auth.user.password_hash", Conf),
  HashValue =
    case string:tokens(PasswordHash, ",") of
          [Hash]           -> list_to_atom(Hash);
          [Prefix, Suffix] -> {list_to_atom(Prefix), list_to_atom(Suffix)};
          [Hash, MacFun, Iterations, Dklen] -> {list_to_atom(Hash), list_to_atom(MacFun), list_to_integer(Iterations), list_to_integer(Dklen)};
          _                -> plain
    end,
    [{password_hash, HashValue}]
end}.
